@startuml
skinparam linestyle ortho

participant AppUI as C
participant Application as M
participant Compiler as Comp
participant ProgramRunner as runner
participant LogoVM as Proc

[-> C: init
C -> M: initApp(container,startX,startY,startAngle)
M -> M: create VM State

create runner
M -> runner: new(vmState, container)
note over runner
  Maintains:
  1. The VM
  2. The VM state
  3. The cursor
end note

create Proc
runner -> Proc: new

C <-- M: runner
[<-- C: //done//


[-> C: parseAndExecuteProgram

C -> C: getCode

C -> M: parseCode(code)

create Comp
M -> Comp: new

M -> Comp: parse(code)
Comp --> M: program
M --> C: program
C -> runner: run(program)
loop for each statement **st** in program
  runner -> Proc: process statement (st,vm state)
  note right
    change vm state, 
    possibly creating new SVG elements
  end note

  note over Proc
    for nested statements
  end note
  loop for each nested statement
    Proc -> Proc: process statement(st,vm state)
  end
end

runner <-- Proc:   
C <-- runner:   

[<-- C: //done//



@enduml